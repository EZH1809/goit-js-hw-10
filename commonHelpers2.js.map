{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаный в документации\nimport iziToast from \"izitoast\";\n// Дополнительный импорт стилей\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector('.form');\n\n// Обработчик событий submit формы\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  // Получение значений из формы\n  const delay = parseInt(form.elements.delay.value, 10);\n  const state = form.elements.state.value;\n\n   // Очистка значения в поле ввода delay\n  form.elements.delay.value = '';\n\n  \n  // Создание и обработка промиса\n  const snackbarPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  \n  snackbarPromise\n    .then((delay) => {\n      // Вывод сообщения об успешном исполнении\n      iziToast.success({\n        title: 'Fulfilled promise',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    })\n    .catch((delay) => {\n      // Вывод сообщения о неудачном исполнении\n      iziToast.error({\n        title: 'Rejected promise',\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    });\n});\n"],"names":["form","event","delay","state","resolve","reject","iziToast"],"mappings":"mIAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAG3CA,EAAK,iBAAiB,SAAWC,GAAU,CACzCA,EAAM,eAAc,EAGpB,MAAMC,EAAQ,SAASF,EAAK,SAAS,MAAM,MAAO,EAAE,EAC9CG,EAAQH,EAAK,SAAS,MAAM,MAGlCA,EAAK,SAAS,MAAM,MAAQ,GAIJ,IAAI,QAAQ,CAACI,EAASC,IAAW,CACvD,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAIE,KAAMA,GAAU,CAEfI,EAAS,QAAQ,CACf,MAAO,oBACP,QAAS,0BAA0BJ,CAAK,IAChD,CAAO,CACP,CAAK,EACA,MAAOA,GAAU,CAEhBI,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBJ,CAAK,IAC/C,CAAO,CACP,CAAK,CACL,CAAC"}